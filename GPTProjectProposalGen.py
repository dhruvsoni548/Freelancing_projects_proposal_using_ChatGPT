# -*- coding: utf-8 -*-
"""freelancer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VJH2X2B1597fYQuxE2QLyE2R_xlp_Fa1
"""

import requests

def fetchandsavetofile(u,p) :
    r = requests.get(u)
    with open(p, "w") as f:
        f.write(r.text)


u = "https://www.freelancer.in/jobs/travel-ready/"

fetchandsavetofile(u,"/content/upwork.html")

import csv
from bs4 import BeautifulSoup

# Load the HTML file
with open('/content/upwork.html', 'r', encoding='utf-8') as file:
    html_content = file.read()

# Parse the HTML content
soup = BeautifulSoup(html_content, 'html.parser')


# Create a list to store project name and description pairs
project_data = []

# Find the HTML elements containing project names and descriptions
project_elements = soup.find_all('div', class_='JobSearchCard-item-inner')

# Extract project name and description and store in the list
for project_element in project_elements:
    name_element = project_element.find('a', class_='JobSearchCard-primary-heading-link')
    description_element = project_element.find('p', class_='JobSearchCard-primary-description')

    if name_element and description_element:
        name = name_element.get_text(strip=True)
        description = description_element.get_text(strip=True)

        project_data.append([name, description])

# Define the CSV file name
csv_file = "/content/data/projects.csv"

# Write the project data to the CSV file
with open(csv_file, 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(['Project Name', 'Description'])  # Write header row

    for project in project_data:
        writer.writerow(project)

print(f"CSV file '{csv_file}' has been created.")

!pip install -q openai

import csv
import openai

# Replace 'your_file.csv' with the path to your CSV file
csv_file_path = '/content/projects.csv'

# Lists to store data from the CSV
first_column = []
second_column = []

# Open the CSV file for reading
with open(csv_file_path, 'r') as csv_file:
    csv_reader = csv.reader(csv_file)

    # Skip the first row (header)
    next(csv_reader)

    # Iterate through each row in the CSV
    for row in csv_reader:
        if row:  # Check if the row is not empty
            first_column.append(row[0])
            second_column.append(row[1])



api_key = 'your_api_key'
openai.api_key = api_key


def generate_proposal(first_column, second_column):
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
        {"role": "user", "content": f"Write a proposal for the project: {first_column}. Project Description: {second_column}."}]
          # Adjust the max_tokens as needed
    )
    return response.choices[0].message[ "content"]

# Generate proposals for each combination of project name and description
proposals = []
for i in range(5):
    name  = first_column[i]
    description = second_column[i]
    proposal = generate_proposal(name, description)
    proposals.append((name, proposal))

# Write the data to a CSV file
output_csv_file = '/content/Upwork_proposal.csv'
with open(output_csv_file, 'w', newline='') as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(['Project Name', 'Proposal'])  # Write header row
    writer.writerows(proposals)  # Write project names and proposals

print(f'Project proposals have been generated and saved to {output_csv_file}.')
